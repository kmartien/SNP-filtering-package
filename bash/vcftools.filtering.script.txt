# See "Instructions/2 filtering with vcftools" for details on using this script

source("R/Visualized.filtered.SNPs.R")

'bash
PROJECT=GTseq.prod.subsample
# 1. Use vcftools to summarize raw stats
FNAME=$PROJECT
bash bash/Summarize.vcf.sh vcf/$FNAME.vcf results/$FNAME

'r
vcf <- PROJECT
visualize.vcf.ind(vcf)
visualize.vcf.loci(vcf)

##################################################################################################
#
#     2.1 Remove genotypes with minDP < 5
#     2.2 Remove loci with minQ < 20, meanDP < 15, minor allele count < 3
#     2.5 Remove monomorphic sites
#
##################################################################################################

bash bash/basic.filtering.sh vcf/$FNAME vcf/$FNAME.basicFiltering


#2.6 Summarize results after round 1 filtering*
FNAME+=.basicFiltering
bash bash/Summarize.vcf.sh vcf/$FNAME.recode.vcf results/$FNAME

vcf <- paste0(vcf,".basicFiltering")
visualize.vcf.ind(vcf)
visualize.vcf.loci(vcf)

#2.7 Remove sites with excess reads
# Includes only loci with mean read depth across all individuals less than or equal to the "max-meanDP" value, which is set to the 95th percentile of the distribution. This value is printed above the mean depth per locus histogram in the locus plot from the visualization step. Otherwise, you can calculate it with the next code chunk.

loc_stats_raw <- read.loc.stats(dir = "results", vcf = vcf) 
names(loc_stats_raw) <- sapply(names(loc_stats_raw), function(x) strsplit(x,vcf))
lmiss.95pctile <- sort(loc_stats_raw$MEAN_DEPTH_)[.95*length(loc_stats_raw$MEAN_DEPTH_)]

#use lmiss.95pctile to parameterize this commandline call:
vcftools --vcf vcf/$FNAME.recode.vcf --out vcf/$FNAME.excessreads --max-meanDP [INSERT lmiss.95pctile value here] --recode --recode-INFO-all

#2.8 Summarize results after removing excess reads*
FNAME+=.excessreads
bash bash/Summarize.vcf.sh vcf/$FNAME.recode.vcf results/$FNAME

vcf <- paste0(vcf,".excessreads")
visualize.vcf.ind(vcf)
visualize.vcf.loci(vcf)

#2.8 Decompose variants and retain only SNPs.*
vcfallelicprimitives vcf/$FNAME.recode.vcf --keep-info --keep-geno > vcf/SNPs.vcf
FNAME=SNPs
vcftools --vcf vcf/$FNAME.vcf --out vcf/$FNAME --remove-indels --recode --recode-INFO-all
vcftools --vcf vcf/$FNAME.recode.vcf --out results/$FNAME  --missing-indv
vcftools --vcf vcf/$FNAME.recode.vcf --out results/$FNAME  --missing-site

#2.9 Iterative filtering
# O'Leary recommends sequential filters of lmiss < .5, imiss < .9, lmiss < .4, imiss < .7, lmiss < .3 where imiss is percent missing data for an individual, lmiss is percent missing data for a locus.  You can check the range of imiss and lmiss with the following R code.

  vcf <- "[INSERT-CURRENT-FNAME]"
  imiss <- read.table(paste("results/",vcf,".imiss",sep=""), header = TRUE, stringsAsFactors = FALSE)
  lmiss <- read.table(paste("results/",vcf,".lmiss",sep=""), header = TRUE, stringsAsFactors = FALSE)
  max.imiss <- range(imiss$F_MISS)[2]
  max.lmiss <- range(lmiss$F_MISS)[2]
  max.imiss
  max.lmiss

####### Remove loci missing more than 50% of genos
vcftools --vcf vcf/$FNAME.recode.vcf --out vcf/$FNAME.maxmiss50 --max-missing 0.5 --recode --recode-INFO-all
FNAME+=.maxmiss50

######## Identify individuals with more than 90% missing genos
vcftools --vcf vcf/$FNAME.recode.vcf --out results/$FNAME --missing-indv

imiss <- read.table(paste0("results/", vcf, ".imiss"), 
                    header = TRUE, stringsAsFactors = FALSE)
LQ_indv <- imiss %>%
  filter(F_MISS > 0.9) %>%
  select(INDV)
write.table(LQ_indv, "results/LQ_Ind_90",
            col.names = FALSE, row.names = FALSE, quote = FALSE)
            
vcftools --vcf vcf/$FNAME.recode.vcf --out vcf/$FNAME.ind90 --remove results/LQ_Ind_90 --recode --recode-INFO-all
FNAME+=.ind90

####### Remove loci missing more than 40% of genos
vcftools --vcf vcf/$FNAME.recode.vcf --out vcf/$FNAME.maxmiss40 --max-missing 0.6 --recode --recode-INFO-all
FNAME+=.maxmiss40

######## Identify individuals with more than 70% missing genos
vcftools --vcf vcf/$FNAME.recode.vcf --out results/$FNAME --missing-indv

imiss <- read.table(paste0("results/", vcf, ".imiss"), 
                    header = TRUE, stringsAsFactors = FALSE)
LQ_indv <- imiss %>%
  filter(F_MISS > 0.7) %>%
  select(INDV)
write.table(LQ_indv, "results/LQ_Ind_70",
            col.names = FALSE, row.names = FALSE, quote = FALSE)
            
vcftools --vcf vcf/$FNAME.recode.vcf --out vcf/$FNAME.ind70 --remove results/LQ_Ind_70 --recode --recode-INFO-all
FNAME+=.ind70

####### Remove loci missing more than 30% of genos
vcftools --vcf vcf/$FNAME.recode.vcf --out vcf/$FNAME.maxmiss30 --max-missing 0.7 --recode --recode-INFO-all
FNAME+=.maxmiss30

bash bash/Summarize.vcf.sh vcf/$FNAME.recode.vcf results/$FNAME

vcf <- paste0(vcf,".maxmiss40")
visualize.vcf.ind(vcf)
visualize.vcf.loci(vcf)

#2.10 INFO filters
# switch over to Galaxy to implement the INFO filters from FS_5 in O'Leary 
#for FLASHed data, run allele balance, strandedness, mapping quality ratio, quality/depth ratio
#Allele Balance: vcffilter -s -f "AB > 0.25 & AB < 0.75 | AB < 0.01" FNAME.recode.vcf > AB.vcf
#Strandedness: vcffilter -f -s "SAF / SAR > 100 & SRF / SRR > 100 | SAR / SAF > 100 & SRR / SRF > 100" AB.vcf > AB.Strand.vcf
#Mapping quality ratio: vcffilter -f "MQM / MQMR > 0.9 & MQM / MQMR < 1.05" AB.Strand.vcf > AB.Strand.mapQual.vcf
#Properly paired: vcffilter -f -s "PAIRED > 0.05 & PAIREDR > 0.05 & PAIREDR / PAIRED < 1.75 & PAIREDR / PAIRED > 0.25 | PAIRED < 0.05 & PAIREDR < 0.05" AB.Strand.mapQual.vcf > AB.Strand.mapQual.paired.vcf
#quality/depth ratio: vcffilter -f "QUAL / DP > 0.25" AB.Strand.mapQual.paired.vcf > AB.Strand.mapQual.paired.qualDepth.vcf

#next, calculate depth and quality per locus in order to do high depth/quality ratio filtering (remove sites with depth > mean + 1 stddev and qual < 2*depth)
vcftools --vcf data/AB.Strand.mapQual.paired.qualDepth.vcf --out results/AB.Strand.mapQual.paired.qualDepth --site-mean-depth
vcftools --vcf data/AB.Strand.mapQual.paired.qualDepth.vcf --out results/AB.Strand.mapQual.paired.qualDepth  --site-quality
# Open R and navigate to the project directory.  Create the variable 'vcf' and set it equal to the current FNAME.  Then run:
  vcf <- "[INSERT-CURRENT-FNAME]"
  site_qual <- read.table(paste("results/",vcf,".lqual",sep=""), header = TRUE, stringsAsFactors = FALSE)
  meanDP <- read.table(paste("results/",vcf,".ldepth.mean",sep=""), header = TRUE, stringsAsFactors = FALSE)
  meanDP$QUAL <- site_qual$QUAL
  high_depth <- subset(meanDP, MEAN_DEPTH > (mean(MEAN_DEPTH) + sqrt(var(MEAN_DEPTH))))
  loc.to.remove <- subset(high_depth, QUAL > 2*MEAN_DEPTH)
  length(loc.to.remove$CHROM)
  if(length(loc.to.remove$CHROM) > 0) {
     write.csv(loc.to.remove[,c(1,2)], file="loc.to.remove.csv", row.names=FALSE)
  }
#if there are loci to remove, run:
vcftools --vcf data/AB.Strand.mapQual.paired.qualDepth.vcf --out data/AB.Strand.mapQual.paired.qualDepth.highDepth --exclude-positions loci.to.remove.txt --recode --recode-INFO-all


#2.11 Remove sites with max-missing > 0.1
# Includes only loci with percent missing data less than or equal to the "max-missing" value; using 10% instead of 5% because with my small sample size 5% means only one individual can 
# have a missing genotype (44/46= 0.956, 42/46=0.913)
vcftools --vcf data/AB.Strand.mapQual.paired.qualDepth.highDepth.recode.vcf --out data/AAB.Strand.mapQual.paired.qualDepth.highDepth.maxmiss10 --max-missing 0.9 --recode --recode-INFO-all

#3.1 Summarize dataset*
/anaconda3/bin/vcfallelicprimitives data/AB.Strand.mapQual.paired.qualDepth.maxmiss10.recode.vcf --keep-info --keep-geno > data/$PROJECT.FS5.vcf
vcftools --vcf data/AB.Strand.mapQual.paired.qualDepth.highDepth.maxmiss10.recode.vcf --out data/$PROJECT.FS5 --remove-indels --recode --recode-INFO-all

#Final summary
FNAME=$PROJECT.FS5
bash Summarize.vcf.sh data/$FNAME.recode.vcf results/$FNAME


##################################################################################################
#
#					NEXT, DOWNLOAD AND VISUALIZE!
#					use script visualize.filtered.SNPs.R
#					vcf <- "Mnov_ddRAD_noFlash.FS5"
#
#			FINALLY, USE SCRIPT Allele_depth_filtering.R to finish filtering
#
##################################################################################################




#The bash script Summarize.vcf.sh is as follows:

#VCF=$1
#RES=$2
#
## depth indv/locus
#vcftools --vcf $VCF --out $RES --depth
#vcftools --vcf $VCF --out $RES --site-mean-depth
#vcftools --vcf $VCF --out $RES --geno-depth
#
## missing data indv/locus
#vcftools --vcf $VCF --out $RES --missing-indv
#vcftools --vcf $VCF --out $RES --missing-site
#
## allele freq/indv freq buden
#vcftools --vcf $VCF --out $RES --indv-freq-burden
#vcftools --vcf $VCF --out $RES --freq2
#vcftools --vcf $VCF --out $RES --singletons
#vcftools --vcf $VCF --out $RES --012
#
## heterozygosity per individual
#vcftools --vcf $VCF --out $RES --het
#
## SNP call quality
#vcftools --vcf $VCF --out $RES --site-quality


